(this.webpackJsonp=this.webpackJsonp||[]).push([["klaviyo-integration-plugin"],{"3FV1":function(t){t.exports=JSON.parse('{"klaviyo_integration_plugin":{"not_available":"N/A","subscribers":{"last_synchronization_status":{"finished":"Last Synchronization: {status} ({date})","not_finished":"Last Synchronization: {status}"},"last_success_synchronization":"Last Success Synchronization: {date}","get_synchronization_status":{"failed":"Failed to get Last Subscribers synchronization status"},"schedule_synchronization":{"button_label":"Synchronize subscribers","success":"Subscribers synchronization scheduled","failed":"Subscribers synchronization failed to schedule","is_running":"Subscribers synchronization is already running"}},"historical_events_tracking":{"last_synchronization_status":{"finished":"Last Synchronization: {status} ({date})","not_finished":"Last Synchronization: {status}"},"last_success_synchronization":"Last Success Synchronization: {date}","get_synchronization_status":{"failed":"Failed to get Last Historical Events Tracking synchronization status"},"schedule_synchronization":{"button_label":"Synchronize historical events","success":"Historical events tracking synchronization scheduled","failed":"Historical events tracking synchronization failed to schedule","is_running":"Historical events tracking synchronization is already running"}},"promotion":{"exportInKlaviyoFormatButtonLabel":"Export in Klaviyo Format"}}}')},UrNF:function(t,i,n){},cmNQ:function(t,i,n){"use strict";n.r(i);var s=n("pIgR"),o=n.n(s);Shopware.Component.override("sw-system-config",{template:o.a});var e=n("3FV1"),a=n("jumV"),r=n.n(a);n("ka2J");var c=class{constructor(t,i){this.apiService=t,this.lastSuccessJob=null,this.lastJob=null,this.lastSynchronizationStatus="",this.lastSynchronizationDate="",this.lastSuccessSynchronizationDate="",this.isSynchronizationInProgress=!1,this.isSynchronizationSuccess=!1,this.date=i}updateJobStatuses(){const t=this.apiService.getJobStatus();return t.then((t=>{t.data.lastSuccessJob?this.lastSuccessJob=t.data.lastSuccessJob:this.lastSuccessJob=null,t.data.lastJob?this.lastJob=t.data.lastJob:this.lastJob=null,this.updateLastSynchronizationStatus(),this.updateLastSuccessSynchronizationDate()})).catch((t=>{console.error("Failed to get job status",t)})),t}updateLastSynchronizationStatus(){this.lastJob?(this.lastSynchronizationStatus=this.lastJob.status,this.lastJob.finishedAt?this.lastSynchronizationDate=this.date(this.lastJob.finishedAt,{hour:"2-digit",minute:"2-digit"}):this.lastSynchronizationDate=null):(this.lastSynchronizationStatus=null,this.lastSynchronizationDate=null)}updateLastSuccessSynchronizationDate(){this.lastSuccessJob&&this.lastSuccessJob.finishedAt?this.lastSuccessSynchronizationDate=this.date(this.lastSuccessJob.finishedAt,{hour:"2-digit",minute:"2-digit"}):this.lastSuccessSynchronizationDate=null}scheduleSynchronization(){const t=this.apiService.scheduleSynchronization();return this.isSynchronizationInProgress=!0,t.then(function(t){this.isSynchronizationSuccess=!!t.data.isScheduled}.bind(this)).catch(function(t){this.isSynchronizationSuccess=!1}.bind(this)).finally(function(){this.isSynchronizationInProgress=!1}.bind(this)),t}resetSynchronizationState(){this.isSynchronizationInProgress=!1,this.isSynchronizationSuccess=!1}};const{Component:h,Mixin:l}=Shopware,{date:u}=Shopware.Utils.format;h.register("klaviyo-historical-events-synchronization-control",{template:r.a,inject:["klaviyoHistoricalEventsSynchronizationApiService","klaviyoSubscribersSynchronizationApiService"],snippets:{"en-GB":e},mixins:[l.getByName("notification")],data(){return{historicalEventsJobInteractor:new c(this.klaviyoHistoricalEventsSynchronizationApiService,u),subscribersSynchronizationJobInteractor:new c(this.klaviyoSubscribersSynchronizationApiService,u)}},created(){this.createdComponent()},computed:{scheduleHistoricalEventsSynchronizationTooltip(){return this.getSynchronizationTooltipOptions(this.historicalEventsJobInteractor,"klaviyo_integration_plugin.historical_events_tracking.last_synchronization_status","klaviyo_integration_plugin.historical_events_tracking.last_success_synchronization")},scheduleSubscribersSynchronizationTooltip(){return this.getSynchronizationTooltipOptions(this.subscribersSynchronizationJobInteractor,"klaviyo_integration_plugin.subscribers.last_synchronization_status","klaviyo_integration_plugin.subscribers.last_success_synchronization")}},methods:{createdComponent(){this.updateJobStatuses()},updateJobStatuses(){this.updateHistoricalEventJobStatus(),this.updateSubscribersSyncJobStatus()},updateHistoricalEventJobStatus(){this.historicalEventsJobInteractor.updateJobStatuses().catch((()=>{this.createNotificationError({message:this.$tc("klaviyo_integration_plugin.historical_events_tracking.get_synchronization_status.failed")})}))},updateSubscribersSyncJobStatus(){this.subscribersSynchronizationJobInteractor.updateJobStatuses().catch((()=>{this.createNotificationError({message:this.$tc("klaviyo_integration_plugin.schedule_synchronization.get_synchronization_status.failed")})}))},scheduleHistoricalEventsSynchronization(){this.historicalEventsJobInteractor.scheduleSynchronization().then(function(t){t.data.isScheduled?this.createNotificationSuccess({message:this.$tc("klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.success")}):"SYNCHRONIZATION_IS_ALREADY_RUNNING"===t.data.errorCode?this.createNotificationWarning({message:this.$tc("klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.is_running")}):this.createNotificationWarning({message:this.$tc("klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.failed")})}.bind(this)).catch(function(t){this.createNotificationError({message:this.$tc("klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.failed")})}.bind(this))},scheduleSubscribersSynchronization(){this.subscribersSynchronizationJobInteractor.scheduleSynchronization().then(function(t){t.data.isScheduled?this.createNotificationSuccess({message:this.$tc("klaviyo_integration_plugin.subscribers.schedule_synchronization.success")}):"SYNCHRONIZATION_IS_ALREADY_RUNNING"===t.data.errorCode?this.createNotificationWarning({message:this.$tc("klaviyo_integration_plugin.subscribers.schedule_synchronization.is_running")}):this.createNotificationWarning({message:this.$tc("klaviyo_integration_plugin.subscribers.schedule_synchronization.failed")})}.bind(this)).catch(function(){this.createNotificationError({message:this.$tc("klaviyo_integration_plugin.subscribers.schedule_synchronization.failed")})}.bind(this))},resetSubscribersSynchronizationState(){this.subscribersSynchronizationJobInteractor.resetSynchronizationState()},resetHistoricalEventsSynchronizationState(){this.historicalEventsJobInteractor.resetSynchronizationState()},getSynchronizationTooltipOptions(t,i,n){let s=this.$tc("klaviyo_integration_plugin.not_available");if(!t||!t.lastJob)return{disabled:!0,message:s,width:200};const o=t.lastSynchronizationStatus?t.lastSynchronizationStatus:s,e=t.lastSynchronizationDate?this.$tc(i+".finished",0,{status:o,date:t.lastSynchronizationDate}):this.$tc(i+".not_finished",0,{status:o}),a=t.lastSuccessSynchronizationDate?t.lastSuccessSynchronizationDate:s;return{disabled:!1,message:e+"<br/>"+this.$tc(n,0,{date:a}),width:320}}}});var S=n("fzkF"),y=n.n(S);Shopware.Component.override("sw-promotion-v2-list",{template:y.a,methods:{getExportUrl:()=>Shopware.Context.api.apiPath+"/klaviyo/integration/promotion/export"}});var d=class{constructor(t,i){this.httpClient=t,this.loginService=i,this.name="klaviyoHistoricalEventsSynchronizationApiService"}getJobStatus(){const t=this.getHeaders();return this.httpClient.get("/klaviyo/integration/job/_action/historical-event-tracking/synchronization/get_status",{},{headers:t})}scheduleSynchronization(){const t=this.getHeaders();return this.httpClient.post("/klaviyo/integration/job/_action/historical-event-tracking/synchronization/schedule",{},{headers:t})}getHeaders(){return{Accept:"application/json",Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"}}};var b=class{constructor(t,i){this.httpClient=t,this.loginService=i,this.name="klaviyoSubscribersSynchronizationApiService"}getJobStatus(){const t=this.getHeaders();return this.httpClient.get("/klaviyo/integration/job/_action/subscribers/synchronization/get_status",{},{headers:t})}scheduleSynchronization(){const t=this.getHeaders();return this.httpClient.post("/klaviyo/integration/job/_action/subscribers/synchronization/schedule",{},{headers:t})}getHeaders(){return{Accept:"application/json",Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"}}};Shopware.Service().register("klaviyoHistoricalEventsSynchronizationApiService",(t=>{const i=Shopware.Application.getContainer("init");return new d(i.httpClient,t.loginService)})),Shopware.Service().register("klaviyoSubscribersSynchronizationApiService",(t=>{const i=Shopware.Application.getContainer("init");return new b(i.httpClient,t.loginService)}))},fzkF:function(t,i){t.exports='{% block sw_promotion_v2_list_smart_bar_actions_add %}\n    {% parent %}\n    <sw-button\n            :link="getExportUrl()"\n            variant="primary"\n    >\n        {{ $tc(\'klaviyo_integration_plugin.promotion.exportInKlaviyoFormatButtonLabel\') }}\n    </sw-button>\n{% endblock %}\n\n{% parent %}'},jumV:function(t,i){t.exports='<div class="klaviyo-historical-events-synchronization-control-wrapper">\n    <sw-card hero="true">\n        <sw-container columns="1fr 1fr">\n            <sw-card-section>\n                <sw-button-process variant="ghost"\n                                   :isLoading="historicalEventsJobInteractor.isSynchronizationInProgress"\n                                   :processSuccess="historicalEventsJobInteractor.isSynchronizationSuccess"\n                                   @click="scheduleHistoricalEventsSynchronization"\n                                   @process-finish="resetHistoricalEventsSynchronizationState"\n                                   v-tooltip="scheduleHistoricalEventsSynchronizationTooltip"\n                >\n                    {{ $tc(\'klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.button_label\') }}\n                </sw-button-process>\n            </sw-card-section>\n            <sw-card-section>\n                <sw-button-process variant="ghost"\n                                   :isLoading="subscribersSynchronizationJobInteractor.isSynchronizationInProgress"\n                                   :processSuccess="subscribersSynchronizationJobInteractor.isSynchronizationSuccess"\n                                   @click="scheduleSubscribersSynchronization"\n                                   @process-finish="resetSubscribersSynchronizationState"\n                                   v-tooltip="scheduleSubscribersSynchronizationTooltip"\n                >\n                    {{ $tc(\'klaviyo_integration_plugin.subscribers.schedule_synchronization.button_label\') }}\n                </sw-button-process>\n            </sw-card-section>\n        </sw-container>\n    </sw-card>\n</div>'},ka2J:function(t,i,n){var s=n("UrNF");"string"==typeof s&&(s=[[t.i,s,""]]),s.locals&&(t.exports=s.locals);(0,n("SZ7m").default)("ae81479a",s,!0,{})},pIgR:function(t,i){t.exports="{% block sw_system_config_content_card %}\n    <klaviyo-historical-events-synchronization-control v-if=\"domain==='KlaviyoIntegrationPlugin.config'\">\n    </klaviyo-historical-events-synchronization-control>\n    {% parent %}\n{% endblock %}\n\n{% parent %}\n"}},[["cmNQ","runtime","vendors-node"]]]);